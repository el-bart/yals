#!/bin/bash
set -eu -o pipefail

app=$(basename "$0")
arch=$(uname -m | sed -e 's/^x86_64$/amd64/' -e 's/^aarch64$/arm64/')

if [ $# -ne 1 ]
then
  echo "$app <version_prefix>" >&2
  exit 2
fi

version_prefix=$1
shift 1

function download_one # <1:url> <2:package>
{
  local url=$1
  local package=$2
  shift 2
  local vp_re=$(sed 's#\.#\\.#g' <<< "$version_prefix")
  echo "$app: downloading $package"
  (
    local tmp=$(mktemp)
    trap "rm -f '$tmp'" EXIT
    wget -q -O "$tmp" "$url/"
    local list=$( cat "$tmp" \
                    | grep "href=\"${package}_${vp_re}\.[0-9]\+.*_" \
                    | grep -e "_${arch}.deb" -e "_all.deb" \
                    | sed -e 's/.*href="//' -e 's/".*//' )
    local patch_vs=$( echo "$list" \
                        | sed "s#${package}_${vp_re}\\.##" \
                        | sed 's#^\([0-9]\+\).*#\1#' )
    local patch_v=$(echo "$patch_vs" | sort -n | tail -1) # get latest patch version
    local p_v=$(echo "${package}_${version_prefix}.${patch_v}")
    local p_v_re=$(echo "$p_v" | sed 's#\.#\\.#g')
    local name=$(echo "$list" | grep "$p_v_re" | tail -1)
    wget -O "$name" "$url/${name}"
    if ! [ -f "$name" ]
    then
      echo "$app: failed to download '$package' from '$url' (looking for '$name')" >&2
      exit 13
    fi
  )
}

url_base="https://snapshot.debian.org/archive/debian/20240312T000000Z/pool/main/k"
download_one "$url_base/kicad"            "kicad"
download_one "$url_base/kicad"            "kicad-libraries"
download_one "$url_base/kicad-footprints" "kicad-footprints"
download_one "$url_base/kicad-packages3d" "kicad-packages3d"
download_one "$url_base/kicad-symbols"    "kicad-symbols"
download_one "$url_base/kicad-templates"  "kicad-templates"
echo "$app: all downloads were successful"
ls -alh kicad*.deb
